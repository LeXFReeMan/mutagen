// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service/synchronization/synchronization.proto

package synchronization

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	selection "github.com/mutagen-io/mutagen/pkg/selection"
	synchronization "github.com/mutagen-io/mutagen/pkg/synchronization"
	url "github.com/mutagen-io/mutagen/pkg/url"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// CreationSpecification contains the metadata required for a new session.
type CreationSpecification struct {
	// Alpha is the alpha endpoint URL for the session.
	Alpha *url.URL `protobuf:"bytes,1,opt,name=alpha,proto3" json:"alpha,omitempty"`
	// Beta is the beta endpoint URL for the session.
	Beta *url.URL `protobuf:"bytes,2,opt,name=beta,proto3" json:"beta,omitempty"`
	// Configuration is the base session configuration. It is the result of
	// merging the global configuration (unless disabled), any manually
	// specified configuration file, and any command line configuration
	// parameters.
	Configuration *synchronization.Configuration `protobuf:"bytes,3,opt,name=configuration,proto3" json:"configuration,omitempty"`
	// ConfigurationAlpha is the alpha-specific session configuration. It is
	// determined based on command line configuration parameters.
	ConfigurationAlpha *synchronization.Configuration `protobuf:"bytes,4,opt,name=configurationAlpha,proto3" json:"configurationAlpha,omitempty"`
	// ConfigurationBeta is the beta-specific session configuration. It is
	// determined based on command line configuration parameters.
	ConfigurationBeta *synchronization.Configuration `protobuf:"bytes,5,opt,name=configurationBeta,proto3" json:"configurationBeta,omitempty"`
	// Name is the name for the session object.
	Name string `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	// Labels are the labels for the session object.
	Labels map[string]string `protobuf:"bytes,7,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Paused indicates whether or not to create the session pre-paused.
	Paused               bool     `protobuf:"varint,8,opt,name=paused,proto3" json:"paused,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreationSpecification) Reset()         { *m = CreationSpecification{} }
func (m *CreationSpecification) String() string { return proto.CompactTextString(m) }
func (*CreationSpecification) ProtoMessage()    {}
func (*CreationSpecification) Descriptor() ([]byte, []int) {
	return fileDescriptor_2876ddae139dc773, []int{0}
}

func (m *CreationSpecification) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreationSpecification.Unmarshal(m, b)
}
func (m *CreationSpecification) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreationSpecification.Marshal(b, m, deterministic)
}
func (m *CreationSpecification) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreationSpecification.Merge(m, src)
}
func (m *CreationSpecification) XXX_Size() int {
	return xxx_messageInfo_CreationSpecification.Size(m)
}
func (m *CreationSpecification) XXX_DiscardUnknown() {
	xxx_messageInfo_CreationSpecification.DiscardUnknown(m)
}

var xxx_messageInfo_CreationSpecification proto.InternalMessageInfo

func (m *CreationSpecification) GetAlpha() *url.URL {
	if m != nil {
		return m.Alpha
	}
	return nil
}

func (m *CreationSpecification) GetBeta() *url.URL {
	if m != nil {
		return m.Beta
	}
	return nil
}

func (m *CreationSpecification) GetConfiguration() *synchronization.Configuration {
	if m != nil {
		return m.Configuration
	}
	return nil
}

func (m *CreationSpecification) GetConfigurationAlpha() *synchronization.Configuration {
	if m != nil {
		return m.ConfigurationAlpha
	}
	return nil
}

func (m *CreationSpecification) GetConfigurationBeta() *synchronization.Configuration {
	if m != nil {
		return m.ConfigurationBeta
	}
	return nil
}

func (m *CreationSpecification) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreationSpecification) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *CreationSpecification) GetPaused() bool {
	if m != nil {
		return m.Paused
	}
	return false
}

// CreateRequest encodes a request for session creation.
type CreateRequest struct {
	// Prompter is the prompter identifier to use for creating sessions.
	Prompter string `protobuf:"bytes,1,opt,name=prompter,proto3" json:"prompter,omitempty"`
	// Specification is the creation specification.
	Specification        *CreationSpecification `protobuf:"bytes,2,opt,name=specification,proto3" json:"specification,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *CreateRequest) Reset()         { *m = CreateRequest{} }
func (m *CreateRequest) String() string { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()    {}
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2876ddae139dc773, []int{1}
}

func (m *CreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRequest.Unmarshal(m, b)
}
func (m *CreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRequest.Marshal(b, m, deterministic)
}
func (m *CreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRequest.Merge(m, src)
}
func (m *CreateRequest) XXX_Size() int {
	return xxx_messageInfo_CreateRequest.Size(m)
}
func (m *CreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRequest proto.InternalMessageInfo

func (m *CreateRequest) GetPrompter() string {
	if m != nil {
		return m.Prompter
	}
	return ""
}

func (m *CreateRequest) GetSpecification() *CreationSpecification {
	if m != nil {
		return m.Specification
	}
	return nil
}

// CreateResponse encodes a session creation response.
type CreateResponse struct {
	// Session is the resulting session identifier.
	Session              string   `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateResponse) Reset()         { *m = CreateResponse{} }
func (m *CreateResponse) String() string { return proto.CompactTextString(m) }
func (*CreateResponse) ProtoMessage()    {}
func (*CreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2876ddae139dc773, []int{2}
}

func (m *CreateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateResponse.Unmarshal(m, b)
}
func (m *CreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateResponse.Marshal(b, m, deterministic)
}
func (m *CreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateResponse.Merge(m, src)
}
func (m *CreateResponse) XXX_Size() int {
	return xxx_messageInfo_CreateResponse.Size(m)
}
func (m *CreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateResponse proto.InternalMessageInfo

func (m *CreateResponse) GetSession() string {
	if m != nil {
		return m.Session
	}
	return ""
}

// ListRequest encodes a request for session metadata.
type ListRequest struct {
	// Selection is the session selection criteria.
	Selection *selection.Selection `protobuf:"bytes,1,opt,name=selection,proto3" json:"selection,omitempty"`
	// PreviousStateIndex is the previously seen state index. 0 may be provided
	// to force an immediate state listing.
	PreviousStateIndex   uint64   `protobuf:"varint,2,opt,name=previousStateIndex,proto3" json:"previousStateIndex,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListRequest) Reset()         { *m = ListRequest{} }
func (m *ListRequest) String() string { return proto.CompactTextString(m) }
func (*ListRequest) ProtoMessage()    {}
func (*ListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2876ddae139dc773, []int{3}
}

func (m *ListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRequest.Unmarshal(m, b)
}
func (m *ListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRequest.Marshal(b, m, deterministic)
}
func (m *ListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRequest.Merge(m, src)
}
func (m *ListRequest) XXX_Size() int {
	return xxx_messageInfo_ListRequest.Size(m)
}
func (m *ListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListRequest proto.InternalMessageInfo

func (m *ListRequest) GetSelection() *selection.Selection {
	if m != nil {
		return m.Selection
	}
	return nil
}

func (m *ListRequest) GetPreviousStateIndex() uint64 {
	if m != nil {
		return m.PreviousStateIndex
	}
	return 0
}

// ListResponse encodes session metadata.
type ListResponse struct {
	// StateIndex is the state index associated with the session metadata.
	StateIndex uint64 `protobuf:"varint,1,opt,name=stateIndex,proto3" json:"stateIndex,omitempty"`
	// SessionStates are the session metadata states.
	SessionStates        []*synchronization.State `protobuf:"bytes,2,rep,name=sessionStates,proto3" json:"sessionStates,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *ListResponse) Reset()         { *m = ListResponse{} }
func (m *ListResponse) String() string { return proto.CompactTextString(m) }
func (*ListResponse) ProtoMessage()    {}
func (*ListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2876ddae139dc773, []int{4}
}

func (m *ListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListResponse.Unmarshal(m, b)
}
func (m *ListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListResponse.Marshal(b, m, deterministic)
}
func (m *ListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListResponse.Merge(m, src)
}
func (m *ListResponse) XXX_Size() int {
	return xxx_messageInfo_ListResponse.Size(m)
}
func (m *ListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListResponse proto.InternalMessageInfo

func (m *ListResponse) GetStateIndex() uint64 {
	if m != nil {
		return m.StateIndex
	}
	return 0
}

func (m *ListResponse) GetSessionStates() []*synchronization.State {
	if m != nil {
		return m.SessionStates
	}
	return nil
}

// FlushRequest encodes a request to flush sessions.
type FlushRequest struct {
	// Prompter is the prompter to use for status message updates.
	Prompter string `protobuf:"bytes,1,opt,name=prompter,proto3" json:"prompter,omitempty"`
	// Selection is the session selection criteria.
	Selection *selection.Selection `protobuf:"bytes,2,opt,name=selection,proto3" json:"selection,omitempty"`
	// SkipWait indicates whether or not the operation should avoid blocking.
	SkipWait             bool     `protobuf:"varint,3,opt,name=skipWait,proto3" json:"skipWait,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FlushRequest) Reset()         { *m = FlushRequest{} }
func (m *FlushRequest) String() string { return proto.CompactTextString(m) }
func (*FlushRequest) ProtoMessage()    {}
func (*FlushRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2876ddae139dc773, []int{5}
}

func (m *FlushRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FlushRequest.Unmarshal(m, b)
}
func (m *FlushRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FlushRequest.Marshal(b, m, deterministic)
}
func (m *FlushRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FlushRequest.Merge(m, src)
}
func (m *FlushRequest) XXX_Size() int {
	return xxx_messageInfo_FlushRequest.Size(m)
}
func (m *FlushRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FlushRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FlushRequest proto.InternalMessageInfo

func (m *FlushRequest) GetPrompter() string {
	if m != nil {
		return m.Prompter
	}
	return ""
}

func (m *FlushRequest) GetSelection() *selection.Selection {
	if m != nil {
		return m.Selection
	}
	return nil
}

func (m *FlushRequest) GetSkipWait() bool {
	if m != nil {
		return m.SkipWait
	}
	return false
}

// FlushResponse indicates completion of flush operation(s).
type FlushResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FlushResponse) Reset()         { *m = FlushResponse{} }
func (m *FlushResponse) String() string { return proto.CompactTextString(m) }
func (*FlushResponse) ProtoMessage()    {}
func (*FlushResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2876ddae139dc773, []int{6}
}

func (m *FlushResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FlushResponse.Unmarshal(m, b)
}
func (m *FlushResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FlushResponse.Marshal(b, m, deterministic)
}
func (m *FlushResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FlushResponse.Merge(m, src)
}
func (m *FlushResponse) XXX_Size() int {
	return xxx_messageInfo_FlushResponse.Size(m)
}
func (m *FlushResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FlushResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FlushResponse proto.InternalMessageInfo

// PauseRequest encodes a request to pause sessions.
type PauseRequest struct {
	// Prompter is the prompter to use for status message updates.
	Prompter string `protobuf:"bytes,1,opt,name=prompter,proto3" json:"prompter,omitempty"`
	// Selection is the session selection criteria.
	Selection            *selection.Selection `protobuf:"bytes,2,opt,name=selection,proto3" json:"selection,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *PauseRequest) Reset()         { *m = PauseRequest{} }
func (m *PauseRequest) String() string { return proto.CompactTextString(m) }
func (*PauseRequest) ProtoMessage()    {}
func (*PauseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2876ddae139dc773, []int{7}
}

func (m *PauseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PauseRequest.Unmarshal(m, b)
}
func (m *PauseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PauseRequest.Marshal(b, m, deterministic)
}
func (m *PauseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PauseRequest.Merge(m, src)
}
func (m *PauseRequest) XXX_Size() int {
	return xxx_messageInfo_PauseRequest.Size(m)
}
func (m *PauseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PauseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PauseRequest proto.InternalMessageInfo

func (m *PauseRequest) GetPrompter() string {
	if m != nil {
		return m.Prompter
	}
	return ""
}

func (m *PauseRequest) GetSelection() *selection.Selection {
	if m != nil {
		return m.Selection
	}
	return nil
}

// PauseResponse indicates completion of pause operation(s).
type PauseResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PauseResponse) Reset()         { *m = PauseResponse{} }
func (m *PauseResponse) String() string { return proto.CompactTextString(m) }
func (*PauseResponse) ProtoMessage()    {}
func (*PauseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2876ddae139dc773, []int{8}
}

func (m *PauseResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PauseResponse.Unmarshal(m, b)
}
func (m *PauseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PauseResponse.Marshal(b, m, deterministic)
}
func (m *PauseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PauseResponse.Merge(m, src)
}
func (m *PauseResponse) XXX_Size() int {
	return xxx_messageInfo_PauseResponse.Size(m)
}
func (m *PauseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PauseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PauseResponse proto.InternalMessageInfo

// ResumeRequest encodes a request to resume sessions.
type ResumeRequest struct {
	// Prompter is the prompter identifier to use for resuming sessions.
	Prompter string `protobuf:"bytes,1,opt,name=prompter,proto3" json:"prompter,omitempty"`
	// Selection is the session selection criteria.
	Selection            *selection.Selection `protobuf:"bytes,2,opt,name=selection,proto3" json:"selection,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ResumeRequest) Reset()         { *m = ResumeRequest{} }
func (m *ResumeRequest) String() string { return proto.CompactTextString(m) }
func (*ResumeRequest) ProtoMessage()    {}
func (*ResumeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2876ddae139dc773, []int{9}
}

func (m *ResumeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResumeRequest.Unmarshal(m, b)
}
func (m *ResumeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResumeRequest.Marshal(b, m, deterministic)
}
func (m *ResumeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResumeRequest.Merge(m, src)
}
func (m *ResumeRequest) XXX_Size() int {
	return xxx_messageInfo_ResumeRequest.Size(m)
}
func (m *ResumeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ResumeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ResumeRequest proto.InternalMessageInfo

func (m *ResumeRequest) GetPrompter() string {
	if m != nil {
		return m.Prompter
	}
	return ""
}

func (m *ResumeRequest) GetSelection() *selection.Selection {
	if m != nil {
		return m.Selection
	}
	return nil
}

// ResumeResponse indicates completion of resume operation(s).
type ResumeResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResumeResponse) Reset()         { *m = ResumeResponse{} }
func (m *ResumeResponse) String() string { return proto.CompactTextString(m) }
func (*ResumeResponse) ProtoMessage()    {}
func (*ResumeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2876ddae139dc773, []int{10}
}

func (m *ResumeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResumeResponse.Unmarshal(m, b)
}
func (m *ResumeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResumeResponse.Marshal(b, m, deterministic)
}
func (m *ResumeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResumeResponse.Merge(m, src)
}
func (m *ResumeResponse) XXX_Size() int {
	return xxx_messageInfo_ResumeResponse.Size(m)
}
func (m *ResumeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ResumeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ResumeResponse proto.InternalMessageInfo

// ResetRequest encodes a request to reset sessions.
type ResetRequest struct {
	// Prompter is the prompter identifier to use for resetting sessions.
	Prompter string `protobuf:"bytes,1,opt,name=prompter,proto3" json:"prompter,omitempty"`
	// Selection is the session selection criteria.
	Selection            *selection.Selection `protobuf:"bytes,2,opt,name=selection,proto3" json:"selection,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ResetRequest) Reset()         { *m = ResetRequest{} }
func (m *ResetRequest) String() string { return proto.CompactTextString(m) }
func (*ResetRequest) ProtoMessage()    {}
func (*ResetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2876ddae139dc773, []int{11}
}

func (m *ResetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResetRequest.Unmarshal(m, b)
}
func (m *ResetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResetRequest.Marshal(b, m, deterministic)
}
func (m *ResetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResetRequest.Merge(m, src)
}
func (m *ResetRequest) XXX_Size() int {
	return xxx_messageInfo_ResetRequest.Size(m)
}
func (m *ResetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ResetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ResetRequest proto.InternalMessageInfo

func (m *ResetRequest) GetPrompter() string {
	if m != nil {
		return m.Prompter
	}
	return ""
}

func (m *ResetRequest) GetSelection() *selection.Selection {
	if m != nil {
		return m.Selection
	}
	return nil
}

// ResetResponse indicates completion of reset operation(s).
type ResetResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResetResponse) Reset()         { *m = ResetResponse{} }
func (m *ResetResponse) String() string { return proto.CompactTextString(m) }
func (*ResetResponse) ProtoMessage()    {}
func (*ResetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2876ddae139dc773, []int{12}
}

func (m *ResetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResetResponse.Unmarshal(m, b)
}
func (m *ResetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResetResponse.Marshal(b, m, deterministic)
}
func (m *ResetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResetResponse.Merge(m, src)
}
func (m *ResetResponse) XXX_Size() int {
	return xxx_messageInfo_ResetResponse.Size(m)
}
func (m *ResetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ResetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ResetResponse proto.InternalMessageInfo

// TerminateRequest encodes a request to terminate sessions.
type TerminateRequest struct {
	// Prompter is the prompter to use for status message updates.
	Prompter string `protobuf:"bytes,1,opt,name=prompter,proto3" json:"prompter,omitempty"`
	// Selection is the session selection criteria.
	Selection            *selection.Selection `protobuf:"bytes,2,opt,name=selection,proto3" json:"selection,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *TerminateRequest) Reset()         { *m = TerminateRequest{} }
func (m *TerminateRequest) String() string { return proto.CompactTextString(m) }
func (*TerminateRequest) ProtoMessage()    {}
func (*TerminateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2876ddae139dc773, []int{13}
}

func (m *TerminateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TerminateRequest.Unmarshal(m, b)
}
func (m *TerminateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TerminateRequest.Marshal(b, m, deterministic)
}
func (m *TerminateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TerminateRequest.Merge(m, src)
}
func (m *TerminateRequest) XXX_Size() int {
	return xxx_messageInfo_TerminateRequest.Size(m)
}
func (m *TerminateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TerminateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TerminateRequest proto.InternalMessageInfo

func (m *TerminateRequest) GetPrompter() string {
	if m != nil {
		return m.Prompter
	}
	return ""
}

func (m *TerminateRequest) GetSelection() *selection.Selection {
	if m != nil {
		return m.Selection
	}
	return nil
}

// TerminateResponse indicates completion of termination operation(s).
type TerminateResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TerminateResponse) Reset()         { *m = TerminateResponse{} }
func (m *TerminateResponse) String() string { return proto.CompactTextString(m) }
func (*TerminateResponse) ProtoMessage()    {}
func (*TerminateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2876ddae139dc773, []int{14}
}

func (m *TerminateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TerminateResponse.Unmarshal(m, b)
}
func (m *TerminateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TerminateResponse.Marshal(b, m, deterministic)
}
func (m *TerminateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TerminateResponse.Merge(m, src)
}
func (m *TerminateResponse) XXX_Size() int {
	return xxx_messageInfo_TerminateResponse.Size(m)
}
func (m *TerminateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TerminateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TerminateResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*CreationSpecification)(nil), "synchronization.CreationSpecification")
	proto.RegisterMapType((map[string]string)(nil), "synchronization.CreationSpecification.LabelsEntry")
	proto.RegisterType((*CreateRequest)(nil), "synchronization.CreateRequest")
	proto.RegisterType((*CreateResponse)(nil), "synchronization.CreateResponse")
	proto.RegisterType((*ListRequest)(nil), "synchronization.ListRequest")
	proto.RegisterType((*ListResponse)(nil), "synchronization.ListResponse")
	proto.RegisterType((*FlushRequest)(nil), "synchronization.FlushRequest")
	proto.RegisterType((*FlushResponse)(nil), "synchronization.FlushResponse")
	proto.RegisterType((*PauseRequest)(nil), "synchronization.PauseRequest")
	proto.RegisterType((*PauseResponse)(nil), "synchronization.PauseResponse")
	proto.RegisterType((*ResumeRequest)(nil), "synchronization.ResumeRequest")
	proto.RegisterType((*ResumeResponse)(nil), "synchronization.ResumeResponse")
	proto.RegisterType((*ResetRequest)(nil), "synchronization.ResetRequest")
	proto.RegisterType((*ResetResponse)(nil), "synchronization.ResetResponse")
	proto.RegisterType((*TerminateRequest)(nil), "synchronization.TerminateRequest")
	proto.RegisterType((*TerminateResponse)(nil), "synchronization.TerminateResponse")
}

func init() {
	proto.RegisterFile("service/synchronization/synchronization.proto", fileDescriptor_2876ddae139dc773)
}

var fileDescriptor_2876ddae139dc773 = []byte{
	// 714 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x56, 0xdb, 0x6e, 0xd3, 0x4c,
	0x10, 0x6e, 0x8e, 0x4d, 0x26, 0x4d, 0x0f, 0xfb, 0xf7, 0xaf, 0x8c, 0x29, 0x21, 0x18, 0x09, 0x45,
	0x48, 0x75, 0xa4, 0x70, 0x43, 0x81, 0x1b, 0x5a, 0x8a, 0x38, 0x44, 0x08, 0x6d, 0x8a, 0x90, 0xb8,
	0x00, 0x39, 0xee, 0x34, 0xb1, 0xea, 0xd8, 0xae, 0x77, 0x5d, 0x91, 0x3e, 0x10, 0x4f, 0xc7, 0x43,
	0x20, 0xaf, 0xd7, 0x89, 0x4f, 0x41, 0x11, 0x52, 0xef, 0x76, 0x76, 0x66, 0xbe, 0x6f, 0x66, 0xe7,
	0x1b, 0x69, 0xe1, 0x88, 0xa1, 0x7f, 0x63, 0x99, 0xd8, 0x67, 0x73, 0xc7, 0x9c, 0xfa, 0xae, 0x63,
	0xdd, 0x1a, 0xdc, 0x72, 0x9d, 0xac, 0xad, 0x7b, 0xbe, 0xcb, 0x5d, 0xb2, 0x93, 0xb9, 0x56, 0xef,
	0x31, 0xb4, 0xd1, 0x8c, 0x32, 0xe2, 0x53, 0x14, 0xab, 0x3e, 0xce, 0x42, 0x9a, 0xae, 0x73, 0x69,
	0x4d, 0x02, 0x3f, 0x01, 0xa8, 0xde, 0xcf, 0xf1, 0x72, 0x83, 0xa3, 0x74, 0xb6, 0x03, 0xdf, 0xee,
	0x07, 0xbe, 0x1d, 0x99, 0xda, 0xef, 0x0a, 0xfc, 0x7f, 0xea, 0xa3, 0x88, 0x1b, 0x79, 0x68, 0x5a,
	0x97, 0x96, 0x29, 0x0c, 0xd2, 0x81, 0x9a, 0x61, 0x7b, 0x53, 0x43, 0x29, 0x75, 0x4b, 0xbd, 0xd6,
	0xa0, 0xa1, 0x87, 0x49, 0x5f, 0xe8, 0x90, 0x46, 0xd7, 0xe4, 0x10, 0xaa, 0x63, 0xe4, 0x86, 0x52,
	0xce, 0xb8, 0xc5, 0x2d, 0x79, 0x03, 0xed, 0x54, 0x69, 0x4a, 0x45, 0x84, 0x75, 0xf4, 0xec, 0x1b,
	0x9c, 0x26, 0xa3, 0x68, 0x3a, 0x89, 0x7c, 0x02, 0x92, 0xba, 0x78, 0x2d, 0x0a, 0xaa, 0xae, 0x05,
	0x55, 0x90, 0x49, 0x86, 0xb0, 0x97, 0xba, 0x3d, 0x09, 0x1b, 0xa8, 0xad, 0x05, 0x97, 0x4f, 0x24,
	0x04, 0xaa, 0x8e, 0x31, 0x43, 0xa5, 0xde, 0x2d, 0xf5, 0x9a, 0x54, 0x9c, 0xc9, 0x07, 0xa8, 0xdb,
	0xc6, 0x18, 0x6d, 0xa6, 0x6c, 0x76, 0x2b, 0xbd, 0xd6, 0x60, 0x90, 0x87, 0x2d, 0x7a, 0x6d, 0x7d,
	0x28, 0x92, 0xce, 0x1c, 0xee, 0xcf, 0xa9, 0x44, 0x20, 0x07, 0x50, 0xf7, 0x8c, 0x80, 0xe1, 0x85,
	0xd2, 0xe8, 0x96, 0x7a, 0x0d, 0x2a, 0x2d, 0xf5, 0x18, 0x5a, 0x89, 0x70, 0xb2, 0x0b, 0x95, 0x2b,
	0x9c, 0x8b, 0x31, 0x35, 0x69, 0x78, 0x24, 0xfb, 0x50, 0xbb, 0x31, 0xec, 0x00, 0xc5, 0x6c, 0x9a,
	0x34, 0x32, 0x5e, 0x94, 0x9f, 0x97, 0xb4, 0x39, 0xb4, 0x05, 0x3f, 0x52, 0xbc, 0x0e, 0x90, 0x71,
	0xa2, 0x42, 0xc3, 0xf3, 0xdd, 0x99, 0xc7, 0xd1, 0x97, 0x08, 0x0b, 0x9b, 0x0c, 0xa1, 0xcd, 0x92,
	0x45, 0xca, 0x51, 0x3f, 0x59, 0xaf, 0x25, 0x9a, 0x4e, 0xd6, 0x9e, 0xc2, 0x76, 0x4c, 0xcd, 0x3c,
	0xd7, 0x61, 0x48, 0x14, 0xd8, 0x64, 0xc8, 0x58, 0x88, 0x1c, 0x51, 0xc7, 0xa6, 0x76, 0x0d, 0xad,
	0xa1, 0xc5, 0x78, 0x5c, 0xe4, 0x00, 0x9a, 0x8b, 0x45, 0x90, 0x72, 0xdc, 0xd7, 0x97, 0xab, 0x31,
	0x8a, 0x4f, 0x74, 0x19, 0x46, 0x74, 0x20, 0x9e, 0x8f, 0x37, 0x96, 0x1b, 0xb0, 0x51, 0x28, 0xff,
	0xf7, 0xce, 0x05, 0xfe, 0x14, 0x1d, 0x54, 0x69, 0x81, 0x47, 0xb3, 0x61, 0x2b, 0xa2, 0x94, 0xc5,
	0x75, 0x00, 0xd8, 0x32, 0xaf, 0x24, 0xf2, 0x12, 0x37, 0xe4, 0x15, 0xb4, 0x65, 0xb5, 0x02, 0x84,
	0x29, 0x65, 0x31, 0xef, 0x83, 0xdc, 0xe3, 0x08, 0x37, 0x4d, 0x07, 0x6b, 0xb7, 0xb0, 0xf5, 0xd6,
	0x0e, 0xd8, 0x74, 0x9d, 0x31, 0xa4, 0xba, 0x2f, 0xaf, 0xd7, 0xbd, 0x0a, 0x0d, 0x76, 0x65, 0x79,
	0x5f, 0x0d, 0x8b, 0x8b, 0xcd, 0x6b, 0xd0, 0x85, 0xad, 0xed, 0x40, 0x5b, 0x72, 0x47, 0xad, 0x6a,
	0xdf, 0x61, 0xeb, 0x73, 0xa8, 0xac, 0x3b, 0x2a, 0x26, 0x24, 0x94, 0xf8, 0x92, 0xf0, 0x07, 0xb4,
	0x29, 0xb2, 0x60, 0x76, 0x67, 0x8c, 0xbb, 0xb0, 0x1d, 0x13, 0x2c, 0x7b, 0xa4, 0xc8, 0x90, 0xdf,
	0x61, 0x8f, 0x12, 0x5f, 0x12, 0x8e, 0x61, 0xf7, 0x1c, 0xfd, 0x99, 0xe5, 0xac, 0xb9, 0x6c, 0xff,
	0x42, 0xfa, 0x1f, 0xec, 0x25, 0x38, 0x22, 0xe2, 0xc1, 0xaf, 0x2a, 0xec, 0x8c, 0xd2, 0x1a, 0x24,
	0x1f, 0xa1, 0x1e, 0xed, 0x1e, 0xe9, 0x14, 0x2f, 0x6f, 0x5c, 0xa2, 0xfa, 0x70, 0xa5, 0x5f, 0xf6,
	0xb5, 0x41, 0xce, 0xa0, 0x1a, 0x6e, 0x0a, 0x39, 0xcc, 0x85, 0x26, 0x76, 0x56, 0x7d, 0xb0, 0xc2,
	0xbb, 0x80, 0x79, 0x07, 0x35, 0x21, 0x43, 0x92, 0x8f, 0x4c, 0xae, 0x86, 0xda, 0x59, 0xe5, 0x4e,
	0x22, 0x09, 0x7d, 0x15, 0x20, 0x25, 0x75, 0x5d, 0x80, 0x94, 0x96, 0xe5, 0x46, 0xf8, 0x4e, 0x91,
	0x6e, 0x0a, 0xde, 0x29, 0xa5, 0xd8, 0x82, 0x77, 0xca, 0x08, 0x4e, 0x94, 0x25, 0x24, 0x51, 0x50,
	0x56, 0x52, 0x8a, 0x6a, 0x67, 0x95, 0x7b, 0x81, 0x74, 0x0e, 0xcd, 0xc5, 0x9c, 0xc9, 0xa3, 0x5c,
	0x78, 0x56, 0x67, 0xaa, 0xf6, 0xb7, 0x90, 0x18, 0xf5, 0xe4, 0xe5, 0xb7, 0xe3, 0x89, 0xc5, 0xa7,
	0xc1, 0x58, 0x37, 0xdd, 0x59, 0x7f, 0x16, 0x70, 0x63, 0x82, 0xce, 0x91, 0xe5, 0xc6, 0xc7, 0xbe,
	0x77, 0x35, 0xe9, 0xaf, 0xf8, 0xca, 0x8c, 0xeb, 0xe2, 0xfb, 0xf0, 0xec, 0x4f, 0x00, 0x00, 0x00,
	0xff, 0xff, 0xd9, 0xe0, 0x92, 0xf8, 0xec, 0x08, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SynchronizationClient is the client API for Synchronization service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SynchronizationClient interface {
	// Create creates a new session.
	Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error)
	// List returns metadata for existing sessions.
	List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error)
	// Flush flushes sessions.
	Flush(ctx context.Context, in *FlushRequest, opts ...grpc.CallOption) (*FlushResponse, error)
	// Pause pauses sessions.
	Pause(ctx context.Context, in *PauseRequest, opts ...grpc.CallOption) (*PauseResponse, error)
	// Resume resumes paused or disconnected sessions.
	Resume(ctx context.Context, in *ResumeRequest, opts ...grpc.CallOption) (*ResumeResponse, error)
	// Reset resets sessions' histories.
	Reset(ctx context.Context, in *ResetRequest, opts ...grpc.CallOption) (*ResetResponse, error)
	// Terminate terminates sessions.
	Terminate(ctx context.Context, in *TerminateRequest, opts ...grpc.CallOption) (*TerminateResponse, error)
}

type synchronizationClient struct {
	cc *grpc.ClientConn
}

func NewSynchronizationClient(cc *grpc.ClientConn) SynchronizationClient {
	return &synchronizationClient{cc}
}

func (c *synchronizationClient) Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error) {
	out := new(CreateResponse)
	err := c.cc.Invoke(ctx, "/synchronization.Synchronization/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *synchronizationClient) List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error) {
	out := new(ListResponse)
	err := c.cc.Invoke(ctx, "/synchronization.Synchronization/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *synchronizationClient) Flush(ctx context.Context, in *FlushRequest, opts ...grpc.CallOption) (*FlushResponse, error) {
	out := new(FlushResponse)
	err := c.cc.Invoke(ctx, "/synchronization.Synchronization/Flush", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *synchronizationClient) Pause(ctx context.Context, in *PauseRequest, opts ...grpc.CallOption) (*PauseResponse, error) {
	out := new(PauseResponse)
	err := c.cc.Invoke(ctx, "/synchronization.Synchronization/Pause", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *synchronizationClient) Resume(ctx context.Context, in *ResumeRequest, opts ...grpc.CallOption) (*ResumeResponse, error) {
	out := new(ResumeResponse)
	err := c.cc.Invoke(ctx, "/synchronization.Synchronization/Resume", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *synchronizationClient) Reset(ctx context.Context, in *ResetRequest, opts ...grpc.CallOption) (*ResetResponse, error) {
	out := new(ResetResponse)
	err := c.cc.Invoke(ctx, "/synchronization.Synchronization/Reset", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *synchronizationClient) Terminate(ctx context.Context, in *TerminateRequest, opts ...grpc.CallOption) (*TerminateResponse, error) {
	out := new(TerminateResponse)
	err := c.cc.Invoke(ctx, "/synchronization.Synchronization/Terminate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SynchronizationServer is the server API for Synchronization service.
type SynchronizationServer interface {
	// Create creates a new session.
	Create(context.Context, *CreateRequest) (*CreateResponse, error)
	// List returns metadata for existing sessions.
	List(context.Context, *ListRequest) (*ListResponse, error)
	// Flush flushes sessions.
	Flush(context.Context, *FlushRequest) (*FlushResponse, error)
	// Pause pauses sessions.
	Pause(context.Context, *PauseRequest) (*PauseResponse, error)
	// Resume resumes paused or disconnected sessions.
	Resume(context.Context, *ResumeRequest) (*ResumeResponse, error)
	// Reset resets sessions' histories.
	Reset(context.Context, *ResetRequest) (*ResetResponse, error)
	// Terminate terminates sessions.
	Terminate(context.Context, *TerminateRequest) (*TerminateResponse, error)
}

// UnimplementedSynchronizationServer can be embedded to have forward compatible implementations.
type UnimplementedSynchronizationServer struct {
}

func (*UnimplementedSynchronizationServer) Create(ctx context.Context, req *CreateRequest) (*CreateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedSynchronizationServer) List(ctx context.Context, req *ListRequest) (*ListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (*UnimplementedSynchronizationServer) Flush(ctx context.Context, req *FlushRequest) (*FlushResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Flush not implemented")
}
func (*UnimplementedSynchronizationServer) Pause(ctx context.Context, req *PauseRequest) (*PauseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Pause not implemented")
}
func (*UnimplementedSynchronizationServer) Resume(ctx context.Context, req *ResumeRequest) (*ResumeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Resume not implemented")
}
func (*UnimplementedSynchronizationServer) Reset(ctx context.Context, req *ResetRequest) (*ResetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Reset not implemented")
}
func (*UnimplementedSynchronizationServer) Terminate(ctx context.Context, req *TerminateRequest) (*TerminateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Terminate not implemented")
}

func RegisterSynchronizationServer(s *grpc.Server, srv SynchronizationServer) {
	s.RegisterService(&_Synchronization_serviceDesc, srv)
}

func _Synchronization_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SynchronizationServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/synchronization.Synchronization/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SynchronizationServer).Create(ctx, req.(*CreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Synchronization_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SynchronizationServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/synchronization.Synchronization/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SynchronizationServer).List(ctx, req.(*ListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Synchronization_Flush_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FlushRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SynchronizationServer).Flush(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/synchronization.Synchronization/Flush",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SynchronizationServer).Flush(ctx, req.(*FlushRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Synchronization_Pause_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PauseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SynchronizationServer).Pause(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/synchronization.Synchronization/Pause",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SynchronizationServer).Pause(ctx, req.(*PauseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Synchronization_Resume_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResumeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SynchronizationServer).Resume(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/synchronization.Synchronization/Resume",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SynchronizationServer).Resume(ctx, req.(*ResumeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Synchronization_Reset_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SynchronizationServer).Reset(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/synchronization.Synchronization/Reset",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SynchronizationServer).Reset(ctx, req.(*ResetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Synchronization_Terminate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TerminateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SynchronizationServer).Terminate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/synchronization.Synchronization/Terminate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SynchronizationServer).Terminate(ctx, req.(*TerminateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Synchronization_serviceDesc = grpc.ServiceDesc{
	ServiceName: "synchronization.Synchronization",
	HandlerType: (*SynchronizationServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _Synchronization_Create_Handler,
		},
		{
			MethodName: "List",
			Handler:    _Synchronization_List_Handler,
		},
		{
			MethodName: "Flush",
			Handler:    _Synchronization_Flush_Handler,
		},
		{
			MethodName: "Pause",
			Handler:    _Synchronization_Pause_Handler,
		},
		{
			MethodName: "Resume",
			Handler:    _Synchronization_Resume_Handler,
		},
		{
			MethodName: "Reset",
			Handler:    _Synchronization_Reset_Handler,
		},
		{
			MethodName: "Terminate",
			Handler:    _Synchronization_Terminate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service/synchronization/synchronization.proto",
}
