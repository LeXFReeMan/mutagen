// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service/tunneling/tunneling.proto

package tunneling

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	selection "github.com/mutagen-io/mutagen/pkg/selection"
	tunneling "github.com/mutagen-io/mutagen/pkg/tunneling"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// CreationSpecification contains the metadata required for a new tunnel.
type CreationSpecification struct {
	// Configuration is the base tunnel configuration. It is the result of
	// merging the global configuration (unless disabled), any manually
	// specified configuration file, and any command line configuration
	// parameters.
	Configuration *tunneling.Configuration `protobuf:"bytes,1,opt,name=configuration,proto3" json:"configuration,omitempty"`
	// Name is the name for the tunnel object.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Labels are the labels for the tunnel object.
	Labels map[string]string `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Paused indicates whether or not to create the tunnel pre-paused.
	Paused               bool     `protobuf:"varint,4,opt,name=paused,proto3" json:"paused,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreationSpecification) Reset()         { *m = CreationSpecification{} }
func (m *CreationSpecification) String() string { return proto.CompactTextString(m) }
func (*CreationSpecification) ProtoMessage()    {}
func (*CreationSpecification) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e41fdc941b0f342, []int{0}
}

func (m *CreationSpecification) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreationSpecification.Unmarshal(m, b)
}
func (m *CreationSpecification) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreationSpecification.Marshal(b, m, deterministic)
}
func (m *CreationSpecification) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreationSpecification.Merge(m, src)
}
func (m *CreationSpecification) XXX_Size() int {
	return xxx_messageInfo_CreationSpecification.Size(m)
}
func (m *CreationSpecification) XXX_DiscardUnknown() {
	xxx_messageInfo_CreationSpecification.DiscardUnknown(m)
}

var xxx_messageInfo_CreationSpecification proto.InternalMessageInfo

func (m *CreationSpecification) GetConfiguration() *tunneling.Configuration {
	if m != nil {
		return m.Configuration
	}
	return nil
}

func (m *CreationSpecification) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreationSpecification) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *CreationSpecification) GetPaused() bool {
	if m != nil {
		return m.Paused
	}
	return false
}

// CreateRequest encodes a request for tunnel creation.
type CreateRequest struct {
	// Prompter is the prompter identifier to use for creating tunnels.
	Prompter string `protobuf:"bytes,1,opt,name=prompter,proto3" json:"prompter,omitempty"`
	// Specification is the creation specification.
	Specification        *CreationSpecification `protobuf:"bytes,2,opt,name=specification,proto3" json:"specification,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *CreateRequest) Reset()         { *m = CreateRequest{} }
func (m *CreateRequest) String() string { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()    {}
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e41fdc941b0f342, []int{1}
}

func (m *CreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRequest.Unmarshal(m, b)
}
func (m *CreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRequest.Marshal(b, m, deterministic)
}
func (m *CreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRequest.Merge(m, src)
}
func (m *CreateRequest) XXX_Size() int {
	return xxx_messageInfo_CreateRequest.Size(m)
}
func (m *CreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRequest proto.InternalMessageInfo

func (m *CreateRequest) GetPrompter() string {
	if m != nil {
		return m.Prompter
	}
	return ""
}

func (m *CreateRequest) GetSpecification() *CreationSpecification {
	if m != nil {
		return m.Specification
	}
	return nil
}

// CreateResponse encodes a session creation response.
type CreateResponse struct {
	// HostCredentials are the tunnel hosting credentials.
	HostCredentials      *tunneling.TunnelHostCredentials `protobuf:"bytes,1,opt,name=hostCredentials,proto3" json:"hostCredentials,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *CreateResponse) Reset()         { *m = CreateResponse{} }
func (m *CreateResponse) String() string { return proto.CompactTextString(m) }
func (*CreateResponse) ProtoMessage()    {}
func (*CreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e41fdc941b0f342, []int{2}
}

func (m *CreateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateResponse.Unmarshal(m, b)
}
func (m *CreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateResponse.Marshal(b, m, deterministic)
}
func (m *CreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateResponse.Merge(m, src)
}
func (m *CreateResponse) XXX_Size() int {
	return xxx_messageInfo_CreateResponse.Size(m)
}
func (m *CreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateResponse proto.InternalMessageInfo

func (m *CreateResponse) GetHostCredentials() *tunneling.TunnelHostCredentials {
	if m != nil {
		return m.HostCredentials
	}
	return nil
}

// ListRequest encodes a request for tunnel metadata.
type ListRequest struct {
	// Selection is the tunnel selection criteria.
	Selection *selection.Selection `protobuf:"bytes,1,opt,name=selection,proto3" json:"selection,omitempty"`
	// PreviousStateIndex is the previously seen state index. 0 may be provided
	// to force an immediate state listing.
	PreviousStateIndex   uint64   `protobuf:"varint,2,opt,name=previousStateIndex,proto3" json:"previousStateIndex,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListRequest) Reset()         { *m = ListRequest{} }
func (m *ListRequest) String() string { return proto.CompactTextString(m) }
func (*ListRequest) ProtoMessage()    {}
func (*ListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e41fdc941b0f342, []int{3}
}

func (m *ListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRequest.Unmarshal(m, b)
}
func (m *ListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRequest.Marshal(b, m, deterministic)
}
func (m *ListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRequest.Merge(m, src)
}
func (m *ListRequest) XXX_Size() int {
	return xxx_messageInfo_ListRequest.Size(m)
}
func (m *ListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListRequest proto.InternalMessageInfo

func (m *ListRequest) GetSelection() *selection.Selection {
	if m != nil {
		return m.Selection
	}
	return nil
}

func (m *ListRequest) GetPreviousStateIndex() uint64 {
	if m != nil {
		return m.PreviousStateIndex
	}
	return 0
}

// ListResponse encodes tunnel metadata.
type ListResponse struct {
	// StateIndex is the state index associated with the tunnel metadata.
	StateIndex uint64 `protobuf:"varint,1,opt,name=stateIndex,proto3" json:"stateIndex,omitempty"`
	// TunnelStates are the tunnel metadata states.
	TunnelStates         []*tunneling.State `protobuf:"bytes,2,rep,name=tunnelStates,proto3" json:"tunnelStates,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ListResponse) Reset()         { *m = ListResponse{} }
func (m *ListResponse) String() string { return proto.CompactTextString(m) }
func (*ListResponse) ProtoMessage()    {}
func (*ListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e41fdc941b0f342, []int{4}
}

func (m *ListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListResponse.Unmarshal(m, b)
}
func (m *ListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListResponse.Marshal(b, m, deterministic)
}
func (m *ListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListResponse.Merge(m, src)
}
func (m *ListResponse) XXX_Size() int {
	return xxx_messageInfo_ListResponse.Size(m)
}
func (m *ListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListResponse proto.InternalMessageInfo

func (m *ListResponse) GetStateIndex() uint64 {
	if m != nil {
		return m.StateIndex
	}
	return 0
}

func (m *ListResponse) GetTunnelStates() []*tunneling.State {
	if m != nil {
		return m.TunnelStates
	}
	return nil
}

// PauseRequest encodes a request to pause tunnels.
type PauseRequest struct {
	// Prompter is the prompter to use for status message updates.
	Prompter string `protobuf:"bytes,1,opt,name=prompter,proto3" json:"prompter,omitempty"`
	// Selection is the tunnel selection criteria.
	Selection            *selection.Selection `protobuf:"bytes,2,opt,name=selection,proto3" json:"selection,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *PauseRequest) Reset()         { *m = PauseRequest{} }
func (m *PauseRequest) String() string { return proto.CompactTextString(m) }
func (*PauseRequest) ProtoMessage()    {}
func (*PauseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e41fdc941b0f342, []int{5}
}

func (m *PauseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PauseRequest.Unmarshal(m, b)
}
func (m *PauseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PauseRequest.Marshal(b, m, deterministic)
}
func (m *PauseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PauseRequest.Merge(m, src)
}
func (m *PauseRequest) XXX_Size() int {
	return xxx_messageInfo_PauseRequest.Size(m)
}
func (m *PauseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PauseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PauseRequest proto.InternalMessageInfo

func (m *PauseRequest) GetPrompter() string {
	if m != nil {
		return m.Prompter
	}
	return ""
}

func (m *PauseRequest) GetSelection() *selection.Selection {
	if m != nil {
		return m.Selection
	}
	return nil
}

// PauseResponse indicates completion of pause operation(s).
type PauseResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PauseResponse) Reset()         { *m = PauseResponse{} }
func (m *PauseResponse) String() string { return proto.CompactTextString(m) }
func (*PauseResponse) ProtoMessage()    {}
func (*PauseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e41fdc941b0f342, []int{6}
}

func (m *PauseResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PauseResponse.Unmarshal(m, b)
}
func (m *PauseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PauseResponse.Marshal(b, m, deterministic)
}
func (m *PauseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PauseResponse.Merge(m, src)
}
func (m *PauseResponse) XXX_Size() int {
	return xxx_messageInfo_PauseResponse.Size(m)
}
func (m *PauseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PauseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PauseResponse proto.InternalMessageInfo

// ResumeRequest encodes a request to resume tunnels.
type ResumeRequest struct {
	// Prompter is the prompter identifier to use for resuming tunnels.
	Prompter string `protobuf:"bytes,1,opt,name=prompter,proto3" json:"prompter,omitempty"`
	// Selection is the tunnel selection criteria.
	Selection            *selection.Selection `protobuf:"bytes,2,opt,name=selection,proto3" json:"selection,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ResumeRequest) Reset()         { *m = ResumeRequest{} }
func (m *ResumeRequest) String() string { return proto.CompactTextString(m) }
func (*ResumeRequest) ProtoMessage()    {}
func (*ResumeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e41fdc941b0f342, []int{7}
}

func (m *ResumeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResumeRequest.Unmarshal(m, b)
}
func (m *ResumeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResumeRequest.Marshal(b, m, deterministic)
}
func (m *ResumeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResumeRequest.Merge(m, src)
}
func (m *ResumeRequest) XXX_Size() int {
	return xxx_messageInfo_ResumeRequest.Size(m)
}
func (m *ResumeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ResumeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ResumeRequest proto.InternalMessageInfo

func (m *ResumeRequest) GetPrompter() string {
	if m != nil {
		return m.Prompter
	}
	return ""
}

func (m *ResumeRequest) GetSelection() *selection.Selection {
	if m != nil {
		return m.Selection
	}
	return nil
}

// ResumeResponse indicates completion of resume operation(s).
type ResumeResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResumeResponse) Reset()         { *m = ResumeResponse{} }
func (m *ResumeResponse) String() string { return proto.CompactTextString(m) }
func (*ResumeResponse) ProtoMessage()    {}
func (*ResumeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e41fdc941b0f342, []int{8}
}

func (m *ResumeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResumeResponse.Unmarshal(m, b)
}
func (m *ResumeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResumeResponse.Marshal(b, m, deterministic)
}
func (m *ResumeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResumeResponse.Merge(m, src)
}
func (m *ResumeResponse) XXX_Size() int {
	return xxx_messageInfo_ResumeResponse.Size(m)
}
func (m *ResumeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ResumeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ResumeResponse proto.InternalMessageInfo

// TerminateRequest encodes a request to terminate tunnels.
type TerminateRequest struct {
	// Prompter is the prompter to use for status message updates.
	Prompter string `protobuf:"bytes,1,opt,name=prompter,proto3" json:"prompter,omitempty"`
	// Selection is the tunnel selection criteria.
	Selection            *selection.Selection `protobuf:"bytes,2,opt,name=selection,proto3" json:"selection,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *TerminateRequest) Reset()         { *m = TerminateRequest{} }
func (m *TerminateRequest) String() string { return proto.CompactTextString(m) }
func (*TerminateRequest) ProtoMessage()    {}
func (*TerminateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e41fdc941b0f342, []int{9}
}

func (m *TerminateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TerminateRequest.Unmarshal(m, b)
}
func (m *TerminateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TerminateRequest.Marshal(b, m, deterministic)
}
func (m *TerminateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TerminateRequest.Merge(m, src)
}
func (m *TerminateRequest) XXX_Size() int {
	return xxx_messageInfo_TerminateRequest.Size(m)
}
func (m *TerminateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TerminateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TerminateRequest proto.InternalMessageInfo

func (m *TerminateRequest) GetPrompter() string {
	if m != nil {
		return m.Prompter
	}
	return ""
}

func (m *TerminateRequest) GetSelection() *selection.Selection {
	if m != nil {
		return m.Selection
	}
	return nil
}

// TerminateResponse indicates completion of termination operation(s).
type TerminateResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TerminateResponse) Reset()         { *m = TerminateResponse{} }
func (m *TerminateResponse) String() string { return proto.CompactTextString(m) }
func (*TerminateResponse) ProtoMessage()    {}
func (*TerminateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e41fdc941b0f342, []int{10}
}

func (m *TerminateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TerminateResponse.Unmarshal(m, b)
}
func (m *TerminateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TerminateResponse.Marshal(b, m, deterministic)
}
func (m *TerminateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TerminateResponse.Merge(m, src)
}
func (m *TerminateResponse) XXX_Size() int {
	return xxx_messageInfo_TerminateResponse.Size(m)
}
func (m *TerminateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TerminateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TerminateResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*CreationSpecification)(nil), "tunneling.CreationSpecification")
	proto.RegisterMapType((map[string]string)(nil), "tunneling.CreationSpecification.LabelsEntry")
	proto.RegisterType((*CreateRequest)(nil), "tunneling.CreateRequest")
	proto.RegisterType((*CreateResponse)(nil), "tunneling.CreateResponse")
	proto.RegisterType((*ListRequest)(nil), "tunneling.ListRequest")
	proto.RegisterType((*ListResponse)(nil), "tunneling.ListResponse")
	proto.RegisterType((*PauseRequest)(nil), "tunneling.PauseRequest")
	proto.RegisterType((*PauseResponse)(nil), "tunneling.PauseResponse")
	proto.RegisterType((*ResumeRequest)(nil), "tunneling.ResumeRequest")
	proto.RegisterType((*ResumeResponse)(nil), "tunneling.ResumeResponse")
	proto.RegisterType((*TerminateRequest)(nil), "tunneling.TerminateRequest")
	proto.RegisterType((*TerminateResponse)(nil), "tunneling.TerminateResponse")
}

func init() { proto.RegisterFile("service/tunneling/tunneling.proto", fileDescriptor_4e41fdc941b0f342) }

var fileDescriptor_4e41fdc941b0f342 = []byte{
	// 594 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x55, 0x4b, 0x6f, 0xd3, 0x40,
	0x10, 0xae, 0xdd, 0x34, 0xaa, 0x27, 0x4d, 0x1b, 0x96, 0xb6, 0xb8, 0xe6, 0xa1, 0xe0, 0x53, 0x0e,
	0xe0, 0x48, 0x29, 0x48, 0x14, 0x21, 0x2a, 0x51, 0x40, 0x05, 0xf5, 0x80, 0xb6, 0x3d, 0x21, 0x04,
	0x72, 0x9c, 0x69, 0xba, 0xaa, 0xbd, 0x76, 0xbd, 0xeb, 0x8a, 0xde, 0xf9, 0x81, 0xfc, 0x24, 0x94,
	0xf5, 0x6b, 0x9d, 0x44, 0x22, 0x42, 0xe2, 0x36, 0x3b, 0x8f, 0xef, 0x9b, 0x6f, 0x66, 0x12, 0xc3,
	0x53, 0x81, 0xe9, 0x2d, 0x0b, 0x70, 0x28, 0x33, 0xce, 0x31, 0x64, 0x7c, 0x5a, 0x5b, 0x5e, 0x92,
	0xc6, 0x32, 0x26, 0x56, 0xe5, 0x70, 0x0e, 0x04, 0x86, 0x18, 0x48, 0x16, 0xf3, 0x61, 0x65, 0xe5,
	0x59, 0xce, 0xe3, 0x1a, 0x20, 0x88, 0xf9, 0x25, 0x9b, 0x66, 0xa9, 0xaf, 0x85, 0xf7, 0xea, 0xb0,
	0x90, 0xbe, 0xc4, 0xc2, 0xbd, 0x3f, 0x4f, 0x9b, 0xfb, 0xdd, 0x5f, 0x26, 0xec, 0x9d, 0xa4, 0xa8,
	0x10, 0xce, 0x13, 0x0c, 0xd8, 0x25, 0x0b, 0xd4, 0x83, 0xbc, 0x85, 0x6e, 0x03, 0xdf, 0x36, 0xfa,
	0xc6, 0xa0, 0x33, 0xb2, 0xbd, 0xba, 0xed, 0x13, 0x3d, 0x4e, 0x9b, 0xe9, 0x84, 0x40, 0x8b, 0xfb,
	0x11, 0xda, 0x66, 0xdf, 0x18, 0x58, 0x54, 0xd9, 0xe4, 0x3d, 0xb4, 0x43, 0x7f, 0x8c, 0xa1, 0xb0,
	0xd7, 0xfb, 0xeb, 0x83, 0xce, 0xe8, 0x99, 0x0e, 0xb6, 0xac, 0x0b, 0xef, 0x4c, 0xa5, 0x7f, 0xe0,
	0x32, 0xbd, 0xa3, 0x45, 0x2d, 0xd9, 0x87, 0x76, 0xe2, 0x67, 0x02, 0x27, 0x76, 0xab, 0x6f, 0x0c,
	0x36, 0x69, 0xf1, 0x72, 0x8e, 0xa0, 0xa3, 0xa5, 0x93, 0x1e, 0xac, 0x5f, 0xe3, 0x9d, 0x6a, 0xdb,
	0xa2, 0x33, 0x93, 0xec, 0xc2, 0xc6, 0xad, 0x1f, 0x66, 0x65, 0x4f, 0xf9, 0xe3, 0xb5, 0xf9, 0xca,
	0x70, 0x05, 0x74, 0x15, 0x3f, 0x52, 0xbc, 0xc9, 0x50, 0x48, 0xe2, 0xc0, 0x66, 0x92, 0xc6, 0x51,
	0x22, 0x31, 0x2d, 0x10, 0xaa, 0x37, 0xf9, 0x08, 0x5d, 0xa1, 0x37, 0xa9, 0xe0, 0x3a, 0xa3, 0xfe,
	0xdf, 0xc4, 0xd0, 0x66, 0x99, 0xfb, 0x0d, 0xb6, 0x4b, 0x52, 0x91, 0xc4, 0x5c, 0x20, 0xf9, 0x0c,
	0x3b, 0x57, 0xb1, 0x90, 0x27, 0x29, 0x4e, 0x90, 0x4b, 0xe6, 0x87, 0xa2, 0x98, 0xba, 0x8e, 0x7d,
	0xa1, 0xac, 0xd3, 0x66, 0x1e, 0x9d, 0x2f, 0x74, 0x6f, 0xa0, 0x73, 0xc6, 0x84, 0x2c, 0x05, 0x8d,
	0xc0, 0xaa, 0x2e, 0xa9, 0x00, 0xdd, 0xf5, 0xea, 0xdb, 0x3a, 0x2f, 0x2d, 0x5a, 0xa7, 0x11, 0x0f,
	0x48, 0x92, 0xe2, 0x2d, 0x8b, 0x33, 0x71, 0x3e, 0xbb, 0xa5, 0x4f, 0x7c, 0x82, 0x3f, 0x95, 0xda,
	0x16, 0x5d, 0x12, 0x71, 0x27, 0xb0, 0x95, 0x53, 0x16, 0x72, 0x9e, 0x00, 0x88, 0xba, 0xce, 0x50,
	0x75, 0x9a, 0x87, 0xbc, 0x80, 0xad, 0x5c, 0x96, 0xc2, 0x10, 0xb6, 0xa9, 0x8e, 0xa2, 0xa7, 0x69,
	0x55, 0x01, 0xda, 0xc8, 0x72, 0xbf, 0xc3, 0xd6, 0x97, 0xd9, 0xc2, 0x57, 0x59, 0x55, 0x43, 0xb5,
	0xb9, 0x92, 0x6a, 0x77, 0x07, 0xba, 0x05, 0x7e, 0x2e, 0xc3, 0xfd, 0x01, 0x5d, 0x8a, 0x22, 0x8b,
	0xfe, 0x1b, 0x63, 0x0f, 0xb6, 0x4b, 0x82, 0x82, 0x72, 0x0c, 0xbd, 0x0b, 0x4c, 0x23, 0xc6, 0x57,
	0x3c, 0xc9, 0x7f, 0x61, 0xbd, 0x0f, 0xf7, 0x34, 0x8e, 0x9c, 0x78, 0xf4, 0xdb, 0x04, 0xeb, 0xa2,
	0x1c, 0x3f, 0x39, 0x86, 0x76, 0x7e, 0xa1, 0xc4, 0x9e, 0x3f, 0xee, 0xb2, 0x2d, 0xe7, 0x60, 0x49,
	0xa4, 0x50, 0xb1, 0x46, 0x8e, 0xa0, 0x35, 0xbb, 0x08, 0xb2, 0xaf, 0x25, 0x69, 0x57, 0xe9, 0x3c,
	0x58, 0xf0, 0x57, 0xa5, 0x6f, 0x60, 0x43, 0xad, 0x81, 0xe8, 0x39, 0xfa, 0xe2, 0x1d, 0x7b, 0x31,
	0x50, 0x55, 0x1f, 0x43, 0x3b, 0x1f, 0x69, 0xa3, 0xf3, 0xc6, 0x1a, 0x1b, 0x9d, 0xcf, 0xcd, 0x7f,
	0x8d, 0x9c, 0x82, 0x55, 0x4d, 0x87, 0x3c, 0xd4, 0x7f, 0x7e, 0x73, 0x7b, 0x71, 0x1e, 0x2d, 0x0f,
	0x96, 0x48, 0xef, 0x5e, 0x7e, 0x3d, 0x9c, 0x32, 0x79, 0x95, 0x8d, 0xbd, 0x20, 0x8e, 0x86, 0x51,
	0x26, 0xfd, 0x29, 0xf2, 0xe7, 0x2c, 0x2e, 0xcd, 0x61, 0x72, 0x3d, 0x1d, 0x2e, 0x7c, 0x1d, 0xc6,
	0x6d, 0xf5, 0x07, 0x7d, 0xf8, 0x27, 0x00, 0x00, 0xff, 0xff, 0xc9, 0xf0, 0x49, 0xa0, 0x39, 0x06,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TunnelingClient is the client API for Tunneling service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TunnelingClient interface {
	Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error)
	List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error)
	Pause(ctx context.Context, in *PauseRequest, opts ...grpc.CallOption) (*PauseResponse, error)
	Resume(ctx context.Context, in *ResumeRequest, opts ...grpc.CallOption) (*ResumeResponse, error)
	Terminate(ctx context.Context, in *TerminateRequest, opts ...grpc.CallOption) (*TerminateResponse, error)
}

type tunnelingClient struct {
	cc *grpc.ClientConn
}

func NewTunnelingClient(cc *grpc.ClientConn) TunnelingClient {
	return &tunnelingClient{cc}
}

func (c *tunnelingClient) Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error) {
	out := new(CreateResponse)
	err := c.cc.Invoke(ctx, "/tunneling.Tunneling/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tunnelingClient) List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error) {
	out := new(ListResponse)
	err := c.cc.Invoke(ctx, "/tunneling.Tunneling/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tunnelingClient) Pause(ctx context.Context, in *PauseRequest, opts ...grpc.CallOption) (*PauseResponse, error) {
	out := new(PauseResponse)
	err := c.cc.Invoke(ctx, "/tunneling.Tunneling/Pause", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tunnelingClient) Resume(ctx context.Context, in *ResumeRequest, opts ...grpc.CallOption) (*ResumeResponse, error) {
	out := new(ResumeResponse)
	err := c.cc.Invoke(ctx, "/tunneling.Tunneling/Resume", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tunnelingClient) Terminate(ctx context.Context, in *TerminateRequest, opts ...grpc.CallOption) (*TerminateResponse, error) {
	out := new(TerminateResponse)
	err := c.cc.Invoke(ctx, "/tunneling.Tunneling/Terminate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TunnelingServer is the server API for Tunneling service.
type TunnelingServer interface {
	Create(context.Context, *CreateRequest) (*CreateResponse, error)
	List(context.Context, *ListRequest) (*ListResponse, error)
	Pause(context.Context, *PauseRequest) (*PauseResponse, error)
	Resume(context.Context, *ResumeRequest) (*ResumeResponse, error)
	Terminate(context.Context, *TerminateRequest) (*TerminateResponse, error)
}

// UnimplementedTunnelingServer can be embedded to have forward compatible implementations.
type UnimplementedTunnelingServer struct {
}

func (*UnimplementedTunnelingServer) Create(ctx context.Context, req *CreateRequest) (*CreateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedTunnelingServer) List(ctx context.Context, req *ListRequest) (*ListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (*UnimplementedTunnelingServer) Pause(ctx context.Context, req *PauseRequest) (*PauseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Pause not implemented")
}
func (*UnimplementedTunnelingServer) Resume(ctx context.Context, req *ResumeRequest) (*ResumeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Resume not implemented")
}
func (*UnimplementedTunnelingServer) Terminate(ctx context.Context, req *TerminateRequest) (*TerminateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Terminate not implemented")
}

func RegisterTunnelingServer(s *grpc.Server, srv TunnelingServer) {
	s.RegisterService(&_Tunneling_serviceDesc, srv)
}

func _Tunneling_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TunnelingServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tunneling.Tunneling/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TunnelingServer).Create(ctx, req.(*CreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Tunneling_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TunnelingServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tunneling.Tunneling/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TunnelingServer).List(ctx, req.(*ListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Tunneling_Pause_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PauseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TunnelingServer).Pause(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tunneling.Tunneling/Pause",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TunnelingServer).Pause(ctx, req.(*PauseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Tunneling_Resume_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResumeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TunnelingServer).Resume(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tunneling.Tunneling/Resume",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TunnelingServer).Resume(ctx, req.(*ResumeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Tunneling_Terminate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TerminateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TunnelingServer).Terminate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tunneling.Tunneling/Terminate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TunnelingServer).Terminate(ctx, req.(*TerminateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Tunneling_serviceDesc = grpc.ServiceDesc{
	ServiceName: "tunneling.Tunneling",
	HandlerType: (*TunnelingServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _Tunneling_Create_Handler,
		},
		{
			MethodName: "List",
			Handler:    _Tunneling_List_Handler,
		},
		{
			MethodName: "Pause",
			Handler:    _Tunneling_Pause_Handler,
		},
		{
			MethodName: "Resume",
			Handler:    _Tunneling_Resume_Handler,
		},
		{
			MethodName: "Terminate",
			Handler:    _Tunneling_Terminate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service/tunneling/tunneling.proto",
}
